?var
?rnomr
?rnorm
X <- rnorm(10, 0, 1)
X
var_X <- var(X)
var_X
var_X <- cov(X)
X <- matrix(rnorm(10*10), 10, 10)
var_X <- cov(X)
var_X
require(psych)
install.packages("psych")
require(psych)
cov_X <- cov(X)
var_X <- trace(cov_X)
?trace
var_X <- tr(cov_X)
var_
X
var_X
E_X <- colMeans(X)
E_X
X - E_X
X
matrix(seq(1, 10), 2, 5)
matrix(seq(1, 10), 2, 5) - c(1,1)
square(2)
c(1,1,3)^2
squared_error <- apply(X - E_X, 1, function(x) x^2)
ssquared_error
squared_error
rowSums(squared_error)
?rowSums
X <- matrix(rnorm(5*10), 5, 10)
X
cov_X <- cov(X)
cov_X
?cov
X <- matrix(rnorm(10*5), 10, 5)
cov_X <- cov(X)
cov_X
X <- cbind(rnorm(10, 0, 1), rnorm(10, 0, 0.5), rnorm(10, 1, 1), rnorm(10, 1, 0.5), rnorm(10, 2, 1))
X
cov_X <- cov(X)
cov_X
?rnorm
plot(rnorm(10, 0, 1), rnorm(10, 0, 0.5))
plot(rnorm(1000, 0, 1), rnorm(1000, 0, 0.5))
var_X <- tr(cov_X)
var_X
E_X <- colMeans(X)
E_X
X
E_X <- colMeans(X)
E_X
matrix(rep(2, 10))
matrix(rep(2, 10), 5, 2)
matrix(rep(2, 10), 5, 2) - c(1,1)
squared_error <- apply(X - E_X, 1, function(x) x^2)
mse <- mean(colSums(squared_error))
mse
var_X
E_X <- colMeans(X)
# calculate the sum of squared error for each row
squared_error <- apply(X - E_X, 2, function(x) x^2)
mse <- mean(colSums(squared_error))
mse
X - E_X
mse <- sum(colMeans(squared_error))
mse```
mse
var_X
X
E_X
X - E_X
squared_error <- apply(X, 2, function(x) (x - mean(x))^2)
squared_error
mse <- sum(colSums(squared_error))
mse
mse <- sum(colMeans(squared_error))
mse
var_X
var(X)
?var
var(1:5)
X
t(X)%*%X
cov_X
setwd("~/Documents/Duke/Term 3/sta 521/hw3")
saipe98 <- read.csv("CPS98T.TXT")
head(saipe98)
saipe98 <- read.csv("CPS98T.TXT", sep=" ")
head(saipe98)
?read.csv
saipe98 <- read.csv("CPS98T.TXT", skip = 1, sep=" ")
head(saipe98)
dim(saipe98)
saipe98 <- read.csv("CPS98T.TXT", skip = 2, sep=" ")
saipe98 <- read.csv("CPS98T.TXT", skip = 1, sep="")
dim(saipe98)
saipe98
saipe98 <- dpylr::read_csv("CPS98T.TXT", skip = 1, sep="")
require(dplyr)
# skip the first row
saipe98 <- dpylr::read_csv("CPS98T.TXT", skip = 1, sep="")
saipe98 <- read_csv("CPS98T.TXT", skip = 1, sep="")
?dplyr
require(readr)
saipe98 <- read.csv("CPS98T.TXT", skip = 1, sep="")
saipe98
cps98 <- saipe98[, "cps98.1"]
cps98
saipe05 <- read.csv("CPS05T.TXT", skip = 1, sep="")
saipe05
cps05 <- saipe05[, "cps05.1"]
cps <- cbind(cps98, cps05)
cps
dim(saipe98)
dim(cps)
colnames(saipe98)[1] <- "fips"
colnames(saipe05)[1] <- "fips"
head(saipe98)
saipe98 <- read.csv("CPS98T.TXT", skip = 1, sep="")
saipe05 <- read.csv("CPS05T.TXT", skip = 1, sep="")
colnames(saipe98)
dim(saipe98)
length(colnames(saipe98))
str(saipe98)
rowMeans(cps)
colMeans(cps)
cov(cps)
39.92843 - 27.59969
33.05264 - 27.59969
require(MASS)
?kde2d
require(mvtnorm)
install.packages("mvtnorm")
require(mvtnorm)
x.points <- seq(-80, 80, length.out = 1000)
y.points <- x.points
mu <- colMeans(cps)
mu
mu <- colMeans(cps.value)
mu <- colMeans(cps.values)
cps
mu <- colMeans(cps).value
tt <- colMeans(cps)
tt
str(tt)
mm <- cov(cps)
str(mm)
class(mm)
sigma <- cov(cps)
for (i in 1:1000) {
for (j in 1:1000) {
z[i, j] <- dmvnorm(c(x.points[i], y.points[j]), mean = mu, sigma = sigma)
}
}
z <- matrix(0, 1000, 1000)
for (i in 1:1000) {
for (j in 1:1000) {
z[i, j] <- dmvnorm(c(x.points[i], y.points[j]), mean = mu, sigma = sigma)
}
}
contour(x.points, y.points, z)
x.points <- seq(0, 30, length.out = 100)
z <- matrix(0, 100, 100)
-
-
-
x.points <- seq(0, 30, length.out = 100)
y.points <- x.points
z <- matrix(0, 100, 100)
mu <- colMeans(cps)
sigma <- cov(cps)
for (i in 1:100) {
for (j in 1:100) {
z[i, j] <- dmvnorm(c(x.points[i], y.points[j]), mean = mu, sigma = sigma)
}
}
contour(x.points, y.points, z)
?contour
contour(x.points, y.points, z, add=T)
x.points <- seq(0, 40, length.out = 100)
y.points <- x.points
z <- matrix(0, 100, 100)
mu <- colMeans(cps)
sigma <- cov(cps)
for (i in 1:100) {
for (j in 1:100) {
z[i, j] <- dmvnorm(c(x.points[i], y.points[j]), mean = mu, sigma = sigma)
}
}
contour(x.points, y.points, z)
```
cps
points(cps[,1], cps[,2])
